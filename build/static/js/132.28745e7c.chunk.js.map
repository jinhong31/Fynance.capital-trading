{"version":3,"sources":["views/apps/chat/store/actions/index.js","views/apps/chat/Chat.js","views/apps/chat/SidebarLeft.js","views/apps/chat/UserProfileSidebar.js","views/apps/chat/index.js"],"names":["getChatContacts","dispatch","axios","get","then","res","type","data","selectChat","id","ChatLog","props","handleUser","handleUserSidebarRight","handleSidebar","store","userSidebarLeft","userProfile","selectedUser","chatArea","useRef","useDispatch","useState","msg","setMsg","useEffect","Object","keys","length","ReactDOM","findDOMNode","current","scrollTop","Number","MAX_SAFE_INTEGER","handleSendMsg","e","obj","preventDefault","message","post","contact","ChatWrapper","chat","PerfectScrollbar","className","classnames","onClick","window","innerWidth","size","imgHeight","imgWidth","img","avatar","status","fullName","UncontrolledDropdown","DropdownToggle","color","DropdownMenu","right","DropdownItem","href","ref","options","wheelPropagation","chatLog","formattedChatLog","chatMessageSenderId","senderId","undefined","msgGroup","messages","forEach","index","push","time","formattedChatData","map","item","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","onChange","target","placeholder","Label","for","hidden","Button","SidebarLeft","sidebar","handleUserSidebarLeft","chats","contacts","about","setAbout","query","setQuery","active","setActive","setStatus","filteredChat","setFilteredChat","filteredContacts","setFilteredContacts","handleUserClick","show","role","rows","defaultValue","CustomInput","label","checked","name","defaultChecked","searchFilterFunction","toLowerCase","includes","filteredChatsArr","filter","filteredContactssArr","formatDateToMonthShort","lastMessage","Date","CardText","unseenMsgs","Badge","pill","UserProfileSidebar","user","userSidebarRight","AppChat","useSelector","state","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","Chat"],"mappings":"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","file":"static/js/132.28745e7c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// ** Get User Profile\r\nexport const getUserProfile = () => {\r\n  return dispatch => {\r\n    return axios.get('/apps/chat/users/profile-user').then(res => {\r\n      return dispatch({\r\n        type: 'GET_USER_PROFILE',\r\n        userProfile: res.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Get Chats & Contacts\r\nexport const getChatContacts = () => {\r\n  return dispatch => {\r\n    axios.get('/apps/chat/chats-and-contacts').then(res => {\r\n      dispatch({\r\n        type: 'GET_CHAT_CONTACTS',\r\n        data: res.data\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n// ** Select Chat\r\nexport const selectChat = id => {\r\n  return dispatch => {\r\n    axios.get('/apps/chat/get-chat', { id }).then(res => {\r\n      dispatch({ type: 'SELECT_CHAT', data: res.data })\r\n      dispatch(getChatContacts())\r\n    })\r\n  }\r\n}\r\n\r\n// ** Send Msg\r\nexport const sendMsg = obj => {\r\n  return dispatch => {\r\n    axios.post('/apps/chat/send-msg', { obj }).then(res => {\r\n      dispatch({ type: 'SEND_MSG', data: res.data })\r\n      dispatch(selectChat(obj.contact.id))\r\n    })\r\n  }\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { sendMsg } from './store/actions'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { MessageSquare, Menu, PhoneCall, Video, Search, MoreVertical, Mic, Image, Send } from 'react-feather'\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Form,\r\n  Label,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  InputGroupText,\r\n  Button\r\n} from 'reactstrap'\r\n\r\nconst ChatLog = props => {\r\n  // ** Props & Store\r\n  const { handleUser, handleUserSidebarRight, handleSidebar, store, userSidebarLeft } = props\r\n  const { userProfile, selectedUser } = store\r\n\r\n  // ** Refs & Dispatch\r\n  const chatArea = useRef(null)\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [msg, setMsg] = useState('')\r\n\r\n  // ** Scroll to chat bottom\r\n  const scrollToBottom = () => {\r\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\r\n    chatContainer.scrollTop = Number.MAX_SAFE_INTEGER\r\n  }\r\n\r\n  // ** If user chat is not empty scrollToBottom\r\n  useEffect(() => {\r\n    const selectedUserLen = Object.keys(selectedUser).length\r\n\r\n    if (selectedUserLen) {\r\n      scrollToBottom()\r\n    }\r\n  }, [selectedUser])\r\n\r\n  // ** Formats chat data based on sender\r\n  const formattedChatData = () => {\r\n    let chatLog = []\r\n    if (selectedUser.chat) {\r\n      chatLog = selectedUser.chat.chat\r\n    }\r\n\r\n    const formattedChatLog = []\r\n    let chatMessageSenderId = chatLog[0] ? chatLog[0].senderId : undefined\r\n    let msgGroup = {\r\n      senderId: chatMessageSenderId,\r\n      messages: []\r\n    }\r\n    chatLog.forEach((msg, index) => {\r\n      if (chatMessageSenderId === msg.senderId) {\r\n        msgGroup.messages.push({\r\n          msg: msg.message,\r\n          time: msg.time\r\n        })\r\n      } else {\r\n        chatMessageSenderId = msg.senderId\r\n        formattedChatLog.push(msgGroup)\r\n        msgGroup = {\r\n          senderId: msg.senderId,\r\n          messages: [\r\n            {\r\n              msg: msg.message,\r\n              time: msg.time\r\n            }\r\n          ]\r\n        }\r\n      }\r\n      if (index === chatLog.length - 1) formattedChatLog.push(msgGroup)\r\n    })\r\n    return formattedChatLog\r\n  }\r\n\r\n  // ** Renders user chat\r\n  const renderChats = () => {\r\n    return formattedChatData().map((item, index) => {\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classnames('chat', {\r\n            'chat-left': item.senderId !== 11\r\n          })}\r\n        >\r\n          <div className='chat-avatar'>\r\n            <Avatar\r\n              className='box-shadow-1 cursor-pointer'\r\n              img={item.senderId === 11 ? userProfile.avatar : selectedUser.contact.avatar}\r\n            />\r\n          </div>\r\n\r\n          <div className='chat-body'>\r\n            {item.messages.map(chat => (\r\n              <div key={chat.msg} className='chat-content'>\r\n                <p>{chat.msg}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Opens right sidebar & handles its data\r\n  const handleAvatarClick = obj => {\r\n    handleUserSidebarRight()\r\n    handleUser(obj)\r\n  }\r\n\r\n  // ** On mobile screen open left sidebar on Start Conversation Click\r\n  const handleStartConversation = () => {\r\n    if (!Object.keys(selectedUser).length && !userSidebarLeft && window.innerWidth <= 1200) {\r\n      handleSidebar()\r\n    }\r\n  }\r\n\r\n  // ** Sends New Msg\r\n  const handleSendMsg = e => {\r\n    e.preventDefault()\r\n    if (msg.length) {\r\n      dispatch(sendMsg({ ...selectedUser, message: msg }))\r\n      setMsg('')\r\n    }\r\n  }\r\n\r\n  // ** ChatWrapper tag based on chat's length\r\n  const ChatWrapper = Object.keys(selectedUser).length && selectedUser.chat ? PerfectScrollbar : 'div'\r\n\r\n  return (\r\n    <div className='chat-app-window'>\r\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedUser).length })}>\r\n        <div className='start-chat-icon mb-1'>\r\n          <MessageSquare />\r\n        </div>\r\n        <h4 className='sidebar-toggle start-chat-text' onClick={handleStartConversation}>\r\n          Start Conversation\r\n        </h4>\r\n      </div>\r\n      {Object.keys(selectedUser).length ? (\r\n        <div className={classnames('active-chat', { 'd-none': selectedUser === null })}>\r\n          <div className='chat-navbar'>\r\n            <header className='chat-header'>\r\n              <div className='d-flex align-items-center'>\r\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\r\n                  <Menu size={21} />\r\n                </div>\r\n                <Avatar\r\n                  imgHeight='36'\r\n                  imgWidth='36'\r\n                  img={selectedUser.contact.avatar}\r\n                  status={selectedUser.contact.status}\r\n                  className='avatar-border user-profile-toggle m-0 mr-1'\r\n                  onClick={() => handleAvatarClick(selectedUser.contact)}\r\n                />\r\n                <h6 className='mb-0'>{selectedUser.contact.fullName}</h6>\r\n              </div>\r\n              <div className='d-flex align-items-center'>\r\n                <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\r\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' />\r\n                <Search size={18} className='cursor-pointer d-sm-block d-none' />\r\n                <UncontrolledDropdown>\r\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\r\n                    <MoreVertical size='18' />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\r\n                      View Contact\r\n                    </DropdownItem>\r\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\r\n                      Mute Notifications\r\n                    </DropdownItem>\r\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\r\n                      Block Contact\r\n                    </DropdownItem>\r\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\r\n                      Clear Chat\r\n                    </DropdownItem>\r\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\r\n                      Report\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </header>\r\n          </div>\r\n\r\n          <ChatWrapper ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\r\n            {selectedUser.chat ? <div className='chats'>{renderChats()}</div> : null}\r\n          </ChatWrapper>\r\n\r\n          <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\r\n            <InputGroup className='input-group-merge mr-1 form-send-message'>\r\n              <InputGroupAddon addonType='prepend'>\r\n                <InputGroupText>\r\n                  <Mic className='cursor-pointer' size={14} />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                value={msg}\r\n                onChange={e => setMsg(e.target.value)}\r\n                placeholder='Type your message or use speech to text'\r\n              />\r\n              <InputGroupAddon addonType='append'>\r\n                <InputGroupText>\r\n                  <Label className='attachment-icon mb-0' for='attach-doc'>\r\n                    <Image className='cursor-pointer text-secondary' size={14} />\r\n                    <input type='file' id='attach-doc' hidden />\r\n                  </Label>\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n            </InputGroup>\r\n            <Button className='send' color='primary'>\r\n              <Send size={14} className='d-lg-none' />\r\n              <span className='d-none d-lg-block'>Send</span>\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatLog\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { selectChat } from './store/actions'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Search, CheckSquare, Bell, User, Trash } from 'react-feather'\r\nimport { CardText, InputGroup, InputGroupAddon, Input, InputGroupText, Badge, CustomInput, Button } from 'reactstrap'\r\n\r\nconst SidebarLeft = props => {\r\n  // ** Props & Store\r\n  const { store, sidebar, handleSidebar, userSidebarLeft, handleUserSidebarLeft } = props\r\n  const { chats, contacts, userProfile } = store\r\n\r\n  // ** Dispatch\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [about, setAbout] = useState('')\r\n  const [query, setQuery] = useState('')\r\n  const [active, setActive] = useState({})\r\n  const [status, setStatus] = useState('online')\r\n  const [filteredChat, setFilteredChat] = useState([])\r\n  const [filteredContacts, setFilteredContacts] = useState([])\r\n\r\n  // ** Handles User Chat Click\r\n  const handleUserClick = (type, id) => {\r\n    dispatch(selectChat(id))\r\n    setActive({ type, id })\r\n    if (sidebar === true) {\r\n      handleSidebar()\r\n    }\r\n  }\r\n\r\n  // ** Renders Chat\r\n  const renderChats = () => {\r\n    if (chats && chats.length) {\r\n      if (query.length && !filteredChat.length) {\r\n        return (\r\n          <li className='no-results show'>\r\n            <h6 className='mb-0'>No Chats Found</h6>\r\n          </li>\r\n        )\r\n      } else {\r\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\r\n\r\n        return arrToMap.map(item => {\r\n          const time = formatDateToMonthShort(item.chat.lastMessage ? item.chat.lastMessage.time : new Date())\r\n\r\n          return (\r\n            <li\r\n              className={classnames({\r\n                active: active.type === 'chat' && active.id === item.id\r\n              })}\r\n              key={item.id}\r\n              onClick={() => handleUserClick('chat', item.id)}\r\n            >\r\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' status={item.status} />\r\n              <div className='chat-info flex-grow-1'>\r\n                <h5 className='mb-0'>{item.fullName}</h5>\r\n                <CardText className='text-truncate'>\r\n                  {item.chat.lastMessage ? item.chat.lastMessage.message : chats[chats.length - 1].message}\r\n                </CardText>\r\n              </div>\r\n              <div className='chat-meta text-nowrap'>\r\n                <small className='float-right mb-25 chat-time ml-25'>{time}</small>\r\n                {item.chat.unseenMsgs >= 1 ? (\r\n                  <Badge className='float-right' color='danger' pill>\r\n                    {item.chat.unseenMsgs}\r\n                  </Badge>\r\n                ) : null}\r\n              </div>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Renders Contact\r\n  const renderContacts = () => {\r\n    if (contacts && contacts.length) {\r\n      if (query.length && !filteredContacts.length) {\r\n        return (\r\n          <li className='no-results show'>\r\n            <h6 className='mb-0'>No Chats Found</h6>\r\n          </li>\r\n        )\r\n      } else {\r\n        const arrToMap = query.length && filteredContacts.length ? filteredContacts : contacts\r\n        return arrToMap.map(item => {\r\n          return (\r\n            <li\r\n              className={classnames({\r\n                active: active.type === 'contact' && active.id === item.id\r\n              })}\r\n              key={item.fullName}\r\n              onClick={() => handleUserClick('contact', item.id)}\r\n            >\r\n              <Avatar img={item.avatar} imgHeight='42' imgWidth='42' />\r\n              <div className='chat-info flex-grow-1'>\r\n                <h5 className='mb-0'>{item.fullName}</h5>\r\n                <CardText className='text-truncate'>{item.about}</CardText>\r\n              </div>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Handles Filter\r\n  const handleFilter = e => {\r\n    setQuery(e.target.value)\r\n    const searchFilterFunction = contact => contact.fullName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    const filteredChatsArr = chats.filter(searchFilterFunction)\r\n    const filteredContactssArr = contacts.filter(searchFilterFunction)\r\n    setFilteredChat([...filteredChatsArr])\r\n    setFilteredContacts([...filteredContactssArr])\r\n  }\r\n\r\n  return store ? (\r\n    <div className='sidebar-left'>\r\n      <div className='sidebar'>\r\n        <div\r\n          className={classnames('chat-profile-sidebar', {\r\n            show: userSidebarLeft\r\n          })}\r\n        >\r\n          <header className='chat-profile-header'>\r\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\r\n              <X size={14} />\r\n            </div>\r\n            <div className='header-profile-sidebar'>\r\n              <Avatar className='box-shadow-1 avatar-border' img={userProfile.avatar} status={status} size='xl' />\r\n              <h4 className='chat-user-name'>{userProfile.fullName}</h4>\r\n              <span className='user-post'>{userProfile.role}</span>\r\n            </div>\r\n          </header>\r\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\r\n            <h6 className='section-label mb-1'>About</h6>\r\n            <div className='about-user'>\r\n              <Input\r\n                rows='5'\r\n                defaultValue={userProfile.about}\r\n                type='textarea'\r\n                onChange={e => setAbout(e.target.value)}\r\n                className={classnames('char-textarea', {\r\n                  'text-danger': about && about.length > 120\r\n                })}\r\n              />\r\n              <small className='counter-value float-right'>\r\n                <span className='char-count'>{userProfile.about ? userProfile.about.length : 0}</span>/ 120\r\n              </small>\r\n            </div>\r\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\r\n            <ul className='list-unstyled user-status'>\r\n              <li className='pb-1'>\r\n                <CustomInput\r\n                  type='radio'\r\n                  className='custom-control-primary'\r\n                  id='online'\r\n                  label='Online'\r\n                  onChange={e => setStatus('online')}\r\n                  checked={status === 'online'}\r\n                />\r\n              </li>\r\n              <li className='pb-1'>\r\n                <CustomInput\r\n                  type='radio'\r\n                  className='custom-control-danger'\r\n                  id='busy'\r\n                  label='Do Not Disturb'\r\n                  onChange={e => setStatus('busy')}\r\n                  checked={status === 'busy'}\r\n                />\r\n              </li>\r\n              <li className='pb-1'>\r\n                <CustomInput\r\n                  type='radio'\r\n                  className='custom-control-warning'\r\n                  id='away'\r\n                  label='Away'\r\n                  onChange={e => setStatus('away')}\r\n                  checked={status === 'away'}\r\n                />\r\n              </li>\r\n              <li className='pb-1'>\r\n                <CustomInput\r\n                  type='radio'\r\n                  className='custom-control-secondary'\r\n                  id='offline'\r\n                  label='Offline'\r\n                  onChange={e => setStatus('offline')}\r\n                  checked={status === 'offline'}\r\n                />\r\n              </li>\r\n            </ul>\r\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\r\n            <ul className='list-unstyled'>\r\n              <li className='d-flex justify-content-between align-items-center mb-1'>\r\n                <div className='d-flex align-items-center'>\r\n                  <CheckSquare className='mr-75' size='18' />\r\n                  <span className='align-middle'>Two-step Verification</span>\r\n                </div>\r\n                <CustomInput type='switch' id='verification' name='verification' label='' defaultChecked />\r\n              </li>\r\n              <li className='d-flex justify-content-between align-items-center mb-1'>\r\n                <div className='d-flex align-items-center'>\r\n                  <Bell className='mr-75' size='18' />\r\n                  <span className='align-middle'>Notification</span>\r\n                </div>\r\n                <CustomInput type='switch' id='notifications' name='notifications' label='' />\r\n              </li>\r\n              <li className='d-flex align-items-center cursor-pointer mb-1'>\r\n                <User className='mr-75' size='18' />\r\n                <span className='align-middle'>Invite Friends</span>\r\n              </li>\r\n              <li className='d-flex align-items-center cursor-pointer'>\r\n                <Trash className='mr-75' size='18' />\r\n                <span className='align-middle'>Delete Account</span>\r\n              </li>\r\n            </ul>\r\n            <div className='mt-3'>\r\n              <Button color='primary'>Logout</Button>\r\n            </div>\r\n          </PerfectScrollbar>\r\n        </div>\r\n        <div\r\n          className={classnames('sidebar-content', {\r\n            show: sidebar === true\r\n          })}\r\n        >\r\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\r\n            <X size={14} />\r\n          </div>\r\n          <div className='chat-fixed-search'>\r\n            <div className='d-flex align-items-center w-100'>\r\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\r\n                {Object.keys(userProfile).length ? (\r\n                  <Avatar\r\n                    className='avatar-border'\r\n                    img={userProfile.avatar}\r\n                    status={status}\r\n                    imgHeight='42'\r\n                    imgWidth='42'\r\n                  />\r\n                ) : null}\r\n              </div>\r\n              <InputGroup className='input-group-merge ml-1 w-100'>\r\n                <InputGroupAddon addonType='prepend'>\r\n                  <InputGroupText className='round'>\r\n                    <Search className='text-muted' size={14} />\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  value={query}\r\n                  className='round'\r\n                  placeholder='Search or start a new chat'\r\n                  onChange={handleFilter}\r\n                />\r\n              </InputGroup>\r\n            </div>\r\n          </div>\r\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\r\n            <h4 className='chat-list-title'>Chats</h4>\r\n            <ul className='chat-users-list chat-list media-list'>{renderChats()}</ul>\r\n            <h4 className='chat-list-title'>Contacts</h4>\r\n            <ul className='chat-users-list contact-list media-list'>{renderContacts()}</ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default SidebarLeft\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { X, Mail, PhoneCall, Clock, Tag, Star, Image, Trash, Slash } from 'react-feather'\r\n\r\nconst UserProfileSidebar = props => {\r\n  // ** Props\r\n  const { user, handleUserSidebarRight, userSidebarRight } = props\r\n\r\n  return (\r\n    <div className={classnames('user-profile-sidebar', { show: userSidebarRight === true })}>\r\n      <header className='user-profile-header'>\r\n        <span className='close-icon' onClick={handleUserSidebarRight}>\r\n          <X size={14} />\r\n        </span>\r\n        <div className='header-profile-sidebar'>\r\n          <Avatar\r\n            className='box-shadow-1 avatar-border'\r\n            size='xl'\r\n            status={user.status}\r\n            img={user.avatar}\r\n            imgHeight='70'\r\n            imgWidth='70'\r\n          />\r\n          <h4 className='chat-user-name'>{user.fullName}</h4>\r\n          <span className='user-post'>{user.role}</span>\r\n        </div>\r\n      </header>\r\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\r\n        <h6 className='section-label mb-1'>About</h6>\r\n        <p>{user.about}</p>\r\n        <div className='personal-info'>\r\n          <h6 className='section-label mb-1 mt-3'>Personal Information</h6>\r\n          <ul className='list-unstyled'>\r\n            <li className='mb-1'>\r\n              <Mail className='mr-50' size={17} />\r\n              <span className='align-middle'>lucifer@email.com</span>\r\n            </li>\r\n            <li className='mb-1'>\r\n              <PhoneCall className='mr-50' size={17} />\r\n              <span className='align-middle'> +1(123) 456 - 7890</span>\r\n            </li>\r\n            <li>\r\n              <Clock className='mr-50' size={17} />\r\n              <span className='align-middle'> Mon - Fri 10AM - 8PM</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className='more-options'>\r\n          <h6 className='section-label mb-1 mt-3'>Options</h6>\r\n          <ul className='list-unstyled'>\r\n            <li className='cursor-pointer mb-1'>\r\n              <Tag className='mr-50' size={17} />\r\n              <span className='align-middle'> Add Tag</span>\r\n            </li>\r\n            <li className='cursor-pointer mb-1'>\r\n              <Star className='mr-50' size={17} />\r\n              <span className='align-middle'> Important Contact</span>\r\n            </li>\r\n            <li className='cursor-pointer mb-1'>\r\n              <Image className='mr-50' size={17} />\r\n              <span className='align-middle'> Shared Media</span>\r\n            </li>\r\n            <li className='cursor-pointer mb-1'>\r\n              <Trash className='mr-50' size={17} />\r\n              <span className='align-middle'> Delete Contact</span>\r\n            </li>\r\n            <li className='cursor-pointer'>\r\n              <Slash className='mr-50' size={17} />\r\n              <span className='align-middle'>Block Contact</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfileSidebar\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Chat App Component Imports\r\nimport Chat from './Chat'\r\nimport Sidebar from './SidebarLeft'\r\nimport UserProfileSidebar from './UserProfileSidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserProfile, getChatContacts } from './store/actions'\r\n\r\nimport '@styles/base/pages/app-chat.scss'\r\nimport '@styles/base/pages/app-chat-list.scss'\r\n\r\nconst AppChat = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.chat)\r\n\r\n  // ** States\r\n  const [user, setUser] = useState({})\r\n  const [sidebar, setSidebar] = useState(false)\r\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\r\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\r\n\r\n  // ** Sidebar & overlay toggle functions\r\n  const handleSidebar = () => setSidebar(!sidebar)\r\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\r\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\r\n  const handleOverlayClick = () => {\r\n    setSidebar(false)\r\n    setUserSidebarRight(false)\r\n    setUserSidebarLeft(false)\r\n  }\r\n\r\n  // ** Set user function for Right Sidebar\r\n  const handleUser = obj => setUser(obj)\r\n\r\n  // ** Get data on Mount\r\n  useEffect(() => {\r\n    dispatch(getChatContacts())\r\n    dispatch(getUserProfile())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        sidebar={sidebar}\r\n        handleSidebar={handleSidebar}\r\n        userSidebarLeft={userSidebarLeft}\r\n        handleUserSidebarLeft={handleUserSidebarLeft}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <div\r\n              className={classnames('body-content-overlay', {\r\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\r\n              })}\r\n              onClick={handleOverlayClick}\r\n            ></div>\r\n            <Chat\r\n              store={store}\r\n              handleUser={handleUser}\r\n              handleSidebar={handleSidebar}\r\n              userSidebarLeft={userSidebarLeft}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n            <UserProfileSidebar\r\n              user={user}\r\n              userSidebarRight={userSidebarRight}\r\n              handleUserSidebarRight={handleUserSidebarRight}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AppChat\r\n"],"sourceRoot":""}